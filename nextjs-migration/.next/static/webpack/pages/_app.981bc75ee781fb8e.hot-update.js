"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/modern/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _services_analyticsEnhanced__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/analyticsEnhanced */ \"./services/analyticsEnhanced.ts\");\n/* harmony import */ var _services_monitoringService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/monitoringService */ \"./services/monitoringService.ts\");\n/* harmony import */ var _styles_day1_app_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/day1-app.css */ \"./styles/day1-app.css\");\n/* harmony import */ var _styles_day1_app_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_day1_app_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _styles_gamification_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/gamification.css */ \"./styles/gamification.css\");\n/* harmony import */ var _styles_gamification_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_gamification_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_7__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n// Create optimized QueryClient for SSR\nfunction createQueryClient() {\n    return new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__.QueryClient({\n        defaultOptions: {\n            queries: {\n                gcTime: 5 * 60 * 1000,\n                staleTime: 30 * 1000,\n                retry: 2,\n                refetchOnWindowFocus: false,\n                refetchOnReconnect: true\n            },\n            mutations: {\n                retry: 1\n            }\n        }\n    });\n}\nfunction App(param) {\n    let { Component, pageProps } = param;\n    _s();\n    const [queryClient] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>createQueryClient());\n    // Performance monitoring initialization\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        // Initialize analytics and monitoring in client\n        if (true) {\n            try {\n                // Initialize monitoring system\n                _services_monitoringService__WEBPACK_IMPORTED_MODULE_4__.monitoring.startMonitoring();\n                // Set up performance alerts\n                _services_monitoringService__WEBPACK_IMPORTED_MODULE_4__.monitoring.setAlert(\"slow_page_load\", 3000, ()=>{\n                    _services_analyticsEnhanced__WEBPACK_IMPORTED_MODULE_3__.analytics.trackEvent(\"performance_alert\", {\n                        category: \"performance\",\n                        alert_type: \"slow_page_load\"\n                    });\n                });\n                // Track app initialization\n                _services_analyticsEnhanced__WEBPACK_IMPORTED_MODULE_3__.analytics.trackEvent(\"app_initialized\", {\n                    category: \"app_lifecycle\",\n                    timestamp: Date.now(),\n                    version: \"2.0-nextjs\"\n                });\n                console.log(\"✅ TimeVault optimization systems initialized\");\n            } catch (error) {\n                console.error(\"❌ Failed to initialize optimization systems:\", error);\n            }\n        }\n        // Cleanup on unmount\n        return ()=>{\n            if (true) {\n                _services_monitoringService__WEBPACK_IMPORTED_MODULE_4__.monitoring.stopMonitoring();\n                _services_analyticsEnhanced__WEBPACK_IMPORTED_MODULE_3__.analytics.destroy();\n            }\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__.QueryClientProvider, {\n        client: queryClient,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                    name: \"viewport\",\n                    content: \"width=device-width, initial-scale=1\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\kjaff\\\\OneDrive\\\\Desktop\\\\TimeVault\\\\nextjs-migration\\\\pages\\\\_app.tsx\",\n                    lineNumber: 73,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\kjaff\\\\OneDrive\\\\Desktop\\\\TimeVault\\\\nextjs-migration\\\\pages\\\\_app.tsx\",\n                lineNumber: 72,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\kjaff\\\\OneDrive\\\\Desktop\\\\TimeVault\\\\nextjs-migration\\\\pages\\\\_app.tsx\",\n                lineNumber: 75,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\kjaff\\\\OneDrive\\\\Desktop\\\\TimeVault\\\\nextjs-migration\\\\pages\\\\_app.tsx\",\n        lineNumber: 71,\n        columnNumber: 9\n    }, this);\n}\n_s(App, \"lwV4W6/zpiIaZ1iDxgEhNj/0C4w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUU7QUFFNUM7QUFDZTtBQUNjO0FBQ0M7QUFDM0I7QUFDSTtBQUNMO0FBRS9CLHVDQUF1QztBQUN2QyxTQUFTTztJQUNMLE9BQU8sSUFBSVAsOERBQVdBLENBQUM7UUFDbkJRLGdCQUFnQjtZQUNaQyxTQUFTO2dCQUNMQyxRQUFRLElBQUksS0FBSztnQkFDakJDLFdBQVcsS0FBSztnQkFDaEJDLE9BQU87Z0JBQ1BDLHNCQUFzQjtnQkFDdEJDLG9CQUFvQjtZQUN4QjtZQUNBQyxXQUFXO2dCQUNQSCxPQUFPO1lBQ1g7UUFDSjtJQUNKO0FBQ0o7QUFFZSxTQUFTSSxJQUFJLEtBQWtDO1FBQWxDLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZLEdBQWxDOztJQUN4QixNQUFNLENBQUNDLFlBQVksR0FBR2YsK0NBQVFBLENBQUMsSUFBTUc7SUFFckMsd0NBQXdDO0lBQ3hDSixnREFBU0EsQ0FBQztRQUNOLGdEQUFnRDtRQUNoRCxJQUFJLElBQWtCLEVBQWE7WUFDL0IsSUFBSTtnQkFDQSwrQkFBK0I7Z0JBQy9CRyxtRUFBVUEsQ0FBQ2MsZUFBZTtnQkFFMUIsNEJBQTRCO2dCQUM1QmQsbUVBQVVBLENBQUNlLFFBQVEsQ0FBQyxrQkFBa0IsTUFBTTtvQkFDeENoQixrRUFBU0EsQ0FBQ2lCLFVBQVUsQ0FBQyxxQkFBcUI7d0JBQ3RDQyxVQUFVO3dCQUNWQyxZQUFZO29CQUNoQjtnQkFDSjtnQkFFQSwyQkFBMkI7Z0JBQzNCbkIsa0VBQVNBLENBQUNpQixVQUFVLENBQUMsbUJBQW1CO29CQUNwQ0MsVUFBVTtvQkFDVkUsV0FBV0MsS0FBS0MsR0FBRztvQkFDbkJDLFNBQVM7Z0JBQ2I7Z0JBRUFDLFFBQVFDLEdBQUcsQ0FBQztZQUNoQixFQUFFLE9BQU9DLE9BQU87Z0JBQ1pGLFFBQVFFLEtBQUssQ0FBQyxnREFBZ0RBO1lBQ2xFO1FBQ0o7UUFFQSxxQkFBcUI7UUFDckIsT0FBTztZQUNILElBQUksSUFBa0IsRUFBYTtnQkFDL0J6QixtRUFBVUEsQ0FBQzBCLGNBQWM7Z0JBQ3pCM0Isa0VBQVNBLENBQUM0QixPQUFPO1lBQ3JCO1FBQ0o7SUFDSixHQUFHLEVBQUU7SUFFTCxxQkFDSSw4REFBQ2hDLHNFQUFtQkE7UUFBQ2lDLFFBQVFmOzswQkFDekIsOERBQUNqQixrREFBSUE7MEJBQ0QsNEVBQUNpQztvQkFBS0MsTUFBSztvQkFBV0MsU0FBUTs7Ozs7Ozs7Ozs7MEJBRWxDLDhEQUFDcEI7Z0JBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7O0FBR3BDO0dBakR3QkY7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC50c3g/MmZiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeUNsaWVudCwgUXVlcnlDbGllbnRQcm92aWRlciB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XHJcbmltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCc7XHJcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XHJcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGFuYWx5dGljcyB9IGZyb20gJy4uL3NlcnZpY2VzL2FuYWx5dGljc0VuaGFuY2VkJztcclxuaW1wb3J0IHsgbW9uaXRvcmluZyB9IGZyb20gJy4uL3NlcnZpY2VzL21vbml0b3JpbmdTZXJ2aWNlJztcclxuaW1wb3J0ICcuLi9zdHlsZXMvZGF5MS1hcHAuY3NzJztcclxuaW1wb3J0ICcuLi9zdHlsZXMvZ2FtaWZpY2F0aW9uLmNzcyc7XHJcbmltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcclxuXHJcbi8vIENyZWF0ZSBvcHRpbWl6ZWQgUXVlcnlDbGllbnQgZm9yIFNTUlxyXG5mdW5jdGlvbiBjcmVhdGVRdWVyeUNsaWVudCgpIHtcclxuICAgIHJldHVybiBuZXcgUXVlcnlDbGllbnQoe1xyXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiB7XHJcbiAgICAgICAgICAgIHF1ZXJpZXM6IHtcclxuICAgICAgICAgICAgICAgIGdjVGltZTogNSAqIDYwICogMTAwMCwgLy8gNSBtaW51dGVzXHJcbiAgICAgICAgICAgICAgICBzdGFsZVRpbWU6IDMwICogMTAwMCwgLy8gMzAgc2Vjb25kc1xyXG4gICAgICAgICAgICAgICAgcmV0cnk6IDIsXHJcbiAgICAgICAgICAgICAgICByZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICByZWZldGNoT25SZWNvbm5lY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG11dGF0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgcmV0cnk6IDEsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xyXG4gICAgY29uc3QgW3F1ZXJ5Q2xpZW50XSA9IHVzZVN0YXRlKCgpID0+IGNyZWF0ZVF1ZXJ5Q2xpZW50KCkpO1xyXG5cclxuICAgIC8vIFBlcmZvcm1hbmNlIG1vbml0b3JpbmcgaW5pdGlhbGl6YXRpb25cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBhbmFseXRpY3MgYW5kIG1vbml0b3JpbmcgaW4gY2xpZW50XHJcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAvLyBJbml0aWFsaXplIG1vbml0b3Jpbmcgc3lzdGVtXHJcbiAgICAgICAgICAgICAgICBtb25pdG9yaW5nLnN0YXJ0TW9uaXRvcmluZygpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyBTZXQgdXAgcGVyZm9ybWFuY2UgYWxlcnRzXHJcbiAgICAgICAgICAgICAgICBtb25pdG9yaW5nLnNldEFsZXJ0KCdzbG93X3BhZ2VfbG9hZCcsIDMwMDAsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBhbmFseXRpY3MudHJhY2tFdmVudCgncGVyZm9ybWFuY2VfYWxlcnQnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5OiAncGVyZm9ybWFuY2UnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydF90eXBlOiAnc2xvd19wYWdlX2xvYWQnXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBUcmFjayBhcHAgaW5pdGlhbGl6YXRpb25cclxuICAgICAgICAgICAgICAgIGFuYWx5dGljcy50cmFja0V2ZW50KCdhcHBfaW5pdGlhbGl6ZWQnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6ICdhcHBfbGlmZWN5Y2xlJyxcclxuICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXHJcbiAgICAgICAgICAgICAgICAgICAgdmVyc2lvbjogJzIuMC1uZXh0anMnXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIFRpbWVWYXVsdCBvcHRpbWl6YXRpb24gc3lzdGVtcyBpbml0aWFsaXplZCcpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEZhaWxlZCB0byBpbml0aWFsaXplIG9wdGltaXphdGlvbiBzeXN0ZW1zOicsIGVycm9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2xlYW51cCBvbiB1bm1vdW50XHJcbiAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgICAgICBtb25pdG9yaW5nLnN0b3BNb25pdG9yaW5nKCk7XHJcbiAgICAgICAgICAgICAgICBhbmFseXRpY3MuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17cXVlcnlDbGllbnR9PlxyXG4gICAgICAgICAgICA8SGVhZD5cclxuICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MVwiIC8+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxyXG4gICAgICAgIDwvUXVlcnlDbGllbnRQcm92aWRlcj5cclxuICAgICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIlF1ZXJ5Q2xpZW50IiwiUXVlcnlDbGllbnRQcm92aWRlciIsIkhlYWQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImFuYWx5dGljcyIsIm1vbml0b3JpbmciLCJjcmVhdGVRdWVyeUNsaWVudCIsImRlZmF1bHRPcHRpb25zIiwicXVlcmllcyIsImdjVGltZSIsInN0YWxlVGltZSIsInJldHJ5IiwicmVmZXRjaE9uV2luZG93Rm9jdXMiLCJyZWZldGNoT25SZWNvbm5lY3QiLCJtdXRhdGlvbnMiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJxdWVyeUNsaWVudCIsInN0YXJ0TW9uaXRvcmluZyIsInNldEFsZXJ0IiwidHJhY2tFdmVudCIsImNhdGVnb3J5IiwiYWxlcnRfdHlwZSIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJ2ZXJzaW9uIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwic3RvcE1vbml0b3JpbmciLCJkZXN0cm95IiwiY2xpZW50IiwibWV0YSIsIm5hbWUiLCJjb250ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n"));

/***/ }),

/***/ "./services/analyticsEnhanced.ts":
/*!***************************************!*\
  !*** ./services/analyticsEnhanced.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalyticsEnhanced: function() { return /* binding */ AnalyticsEnhanced; },\n/* harmony export */   analytics: function() { return /* binding */ analytics; }\n/* harmony export */ });\nclass AnalyticsEnhanced {\n    generateUserId() {\n        if (false) {}\n        let userId = localStorage.getItem(\"timevault_user_id\");\n        if (!userId) {\n            userId = crypto.randomUUID();\n            localStorage.setItem(\"timevault_user_id\", userId);\n        }\n        return userId;\n    }\n    initializeSession() {\n        if (false) {}\n        this.trackEvent(\"session_start\", {\n            user_agent: navigator.userAgent,\n            screen_resolution: \"\".concat(screen.width, \"x\").concat(screen.height),\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n            language: navigator.language,\n            platform: navigator.platform\n        });\n    }\n    setupAutoFlush() {\n        // Flush events every 30 seconds\n        this.flushTimer = setInterval(()=>{\n            if (this.events.length > 0) {\n                this.flushEvents();\n            }\n        }, 30000);\n        // Flush on page unload\n        if (true) {\n            window.addEventListener(\"beforeunload\", ()=>{\n                this.flushEvents();\n            });\n        }\n    }\n    trackEvent(event) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const eventData = {\n            event,\n            data: {\n                ...data,\n                session_id: this.sessionId,\n                user_id: this.userId,\n                timestamp: Date.now(),\n                page_url:  true ? window.location.href : 0\n            },\n            timestamp: Date.now()\n        };\n        this.events.push(eventData);\n        // Send to Google Analytics if available\n        if ( true && window.gtag) {\n            window.gtag(\"event\", event, {\n                event_category: data.category || \"user_interaction\",\n                event_label: data.label || \"\",\n                value: data.value || 0,\n                custom_parameters: data\n            });\n        }\n        // Batch send to backend every 10 events\n        if (this.events.length >= 10) {\n            this.flushEvents();\n        }\n    }\n    async flushEvents() {\n        if (this.events.length === 0) return;\n        const eventsToSend = [\n            ...this.events\n        ];\n        this.events.length = 0;\n        try {\n            // Only attempt to send if we're in browser environment\n            if (true) {\n                await fetch(\"/api/analytics/events\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(eventsToSend)\n                });\n            }\n        } catch (error) {\n            console.warn(\"Failed to send analytics events:\", error);\n            // Re-add failed events back to queue (up to a limit)\n            if (this.events.length < 50) {\n                this.events.unshift(...eventsToSend);\n            }\n        }\n    }\n    // Customer Experience specific tracking\n    trackUserJourney(step) {\n        let metadata = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        this.trackEvent(\"user_journey\", {\n            category: \"ux\",\n            step,\n            ...metadata\n        });\n    }\n    trackPerformance(metric, value) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        this.trackEvent(\"performance_metric\", {\n            category: \"performance\",\n            metric,\n            value,\n            ...context\n        });\n    }\n    trackError(error) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        this.trackEvent(\"error\", {\n            category: \"error\",\n            message: error.message,\n            stack: error.stack,\n            ...context\n        });\n    }\n    // Customer satisfaction tracking\n    trackSatisfaction(rating) {\n        let feedback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        this.trackEvent(\"satisfaction_rating\", {\n            category: \"cx\",\n            rating,\n            feedback,\n            ...context\n        });\n    }\n    // Enhanced user behavior tracking\n    trackConversion(type) {\n        let value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        this.trackEvent(\"conversion\", {\n            category: \"conversion\",\n            conversion_type: type,\n            value,\n            ...metadata\n        });\n    }\n    trackEngagement(action) {\n        let duration = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        this.trackEvent(\"engagement\", {\n            category: \"engagement\",\n            action,\n            duration,\n            ...metadata\n        });\n    }\n    // Utility methods\n    isTrackingEnabled() {\n        return  true && !navigator.doNotTrack;\n    }\n    getUserBehaviorPattern() {\n        // This would analyze user behavior patterns\n        // For now, return mock data\n        return {\n            likelyToUseQuiz: Math.random() > 0.5,\n            likelyToUpgrade: Math.random() > 0.7,\n            engagementLevel: \"high\",\n            preferredFeatures: [\n                \"calculator\",\n                \"quiz\"\n            ]\n        };\n    }\n    getSessionData() {\n        return {\n            sessionId: this.sessionId,\n            userId: this.userId,\n            eventsQueued: this.events.length\n        };\n    }\n    // Cleanup method\n    destroy() {\n        if (this.flushTimer) {\n            clearInterval(this.flushTimer);\n        }\n        this.flushEvents();\n    }\n    constructor(){\n        this.events = [];\n        this.sessionId = crypto.randomUUID();\n        this.flushTimer = null;\n        this.userId = this.generateUserId();\n        this.initializeSession();\n        this.setupAutoFlush();\n    }\n}\nconst analytics = new AnalyticsEnhanced();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/analyticsEnhanced.ts\n"));

/***/ }),

/***/ "./services/monitoringService.ts":
/*!***************************************!*\
  !*** ./services/monitoringService.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MonitoringService: function() { return /* binding */ MonitoringService; },\n/* harmony export */   monitoring: function() { return /* binding */ monitoring; }\n/* harmony export */ });\n/* harmony import */ var _analyticsEnhanced__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./analyticsEnhanced */ \"./services/analyticsEnhanced.ts\");\n\nclass MonitoringService {\n    startMonitoring() {\n        if (this.isMonitoring) return;\n        this.isMonitoring = true;\n        this.initializeMonitoring();\n    }\n    initializeMonitoring() {\n        // Performance monitoring\n        this.monitorPerformance();\n        // Error monitoring\n        this.monitorErrors();\n        // User behavior monitoring\n        this.monitorUserBehavior();\n        // Resource monitoring\n        this.monitorResources();\n    }\n    monitorPerformance() {\n        // Monitor page load times\n        if (true) {\n            window.addEventListener(\"load\", ()=>{\n                const loadTime = performance.timing.loadEventEnd - performance.timing.navigationStart;\n                this.recordMetric(\"page_load_time\", loadTime);\n                if (loadTime > 3000) {\n                    this.triggerAlert(\"slow_page_load\", loadTime);\n                }\n            });\n            // Monitor API response times using performance observer\n            if (\"PerformanceObserver\" in window) {\n                const observer = new PerformanceObserver((list)=>{\n                    for (const entry of list.getEntries()){\n                        if (entry.entryType === \"navigation\") {\n                            const navEntry = entry;\n                            this.recordMetric(\"navigation_time\", navEntry.loadEventEnd - navEntry.fetchStart);\n                        }\n                    }\n                });\n                observer.observe({\n                    entryTypes: [\n                        \"navigation\"\n                    ]\n                });\n            }\n        }\n    }\n    monitorErrors() {\n        if (false) {}\n        window.addEventListener(\"error\", (event)=>{\n            this.recordMetric(\"javascript_errors\", 1);\n            _analyticsEnhanced__WEBPACK_IMPORTED_MODULE_0__.analytics.trackError(new Error(event.message), {\n                filename: event.filename,\n                lineno: event.lineno,\n                colno: event.colno\n            });\n        });\n        window.addEventListener(\"unhandledrejection\", (event)=>{\n            this.recordMetric(\"promise_rejections\", 1);\n            _analyticsEnhanced__WEBPACK_IMPORTED_MODULE_0__.analytics.trackError(new Error(String(event.reason)), {\n                type: \"unhandled_promise_rejection\"\n            });\n        });\n    }\n    monitorUserBehavior() {\n        if (false) {}\n        // Monitor user engagement\n        let engagementStart = Date.now();\n        let isEngaged = true;\n        const resetEngagement = ()=>{\n            if (isEngaged) {\n                const engagementTime = Date.now() - engagementStart;\n                this.recordMetric(\"engagement_duration\", engagementTime);\n            }\n            engagementStart = Date.now();\n            isEngaged = true;\n        };\n        // Simple throttle function\n        const throttle = (func, limit)=>{\n            let inThrottle;\n            return ()=>{\n                if (!inThrottle) {\n                    func();\n                    inThrottle = true;\n                    setTimeout(()=>inThrottle = false, limit);\n                }\n            };\n        };\n        // Track user activity\n        [\n            \"click\",\n            \"keydown\",\n            \"scroll\",\n            \"mousemove\"\n        ].forEach((event)=>{\n            document.addEventListener(event, throttle(resetEngagement, 1000));\n        });\n        // Detect user idle\n        setInterval(()=>{\n            if (Date.now() - engagementStart > 30000 && isEngaged) {\n                isEngaged = false;\n                this.recordMetric(\"user_idle_events\", 1);\n            }\n        }, 5000);\n    }\n    monitorResources() {\n        if (false) {}\n        // Monitor memory usage\n        if (\"memory\" in performance) {\n            setInterval(()=>{\n                const memory = this.monitorMemory();\n                if (memory) {\n                    this.recordMetric(\"memory_usage\", memory.used);\n                    if (memory.used > memory.limit * 0.8) {\n                        this.triggerAlert(\"high_memory_usage\", memory.used);\n                    }\n                }\n            }, 10000);\n        }\n        // Monitor network connection\n        if (\"connection\" in navigator) {\n            const connection = navigator.connection;\n            this.recordMetric(\"network_downlink\", connection.downlink || 0);\n            connection.addEventListener(\"change\", ()=>{\n                this.recordMetric(\"network_change_events\", 1);\n                _analyticsEnhanced__WEBPACK_IMPORTED_MODULE_0__.analytics.trackEvent(\"network_change\", {\n                    category: \"performance\",\n                    downlink: connection.downlink,\n                    effectiveType: connection.effectiveType\n                });\n            });\n        }\n    }\n    recordMetric(name, value) {\n        const existing = this.metrics.get(name) || [];\n        existing.push(value);\n        // Keep only last 100 measurements\n        if (existing.length > 100) {\n            existing.shift();\n        }\n        this.metrics.set(name, existing);\n    }\n    triggerAlert(alertType, value) {\n        const alert = this.alerts.get(alertType);\n        if (alert && value > alert.threshold) {\n            alert.callback();\n        }\n        // Send alert to analytics\n        _analyticsEnhanced__WEBPACK_IMPORTED_MODULE_0__.analytics.trackEvent(\"performance_alert\", {\n            category: \"monitoring\",\n            alert_type: alertType,\n            value\n        });\n    }\n    setAlert(alertType, threshold, callback) {\n        this.alerts.set(alertType, {\n            threshold,\n            callback\n        });\n    }\n    getMetrics() {\n        const result = {};\n        for (const [key, value] of this.metrics.entries()){\n            result[key] = value;\n        }\n        return result;\n    }\n    getAverageMetric(name) {\n        const values = this.metrics.get(name) || [];\n        return values.length > 0 ? values.reduce((a, b)=>a + b) / values.length : 0;\n    }\n    // Health check method\n    getHealthStatus() {\n        const memoryUsage = this.getAverageMetric(\"memory_usage\");\n        const loadTime = this.getAverageMetric(\"page_load_time\");\n        const errorRate = this.getAverageMetric(\"javascript_errors\");\n        return {\n            status: this.calculateHealthStatus(memoryUsage, loadTime, errorRate),\n            metrics: {\n                memory_usage: memoryUsage,\n                page_load_time: loadTime,\n                error_rate: errorRate\n            },\n            timestamp: Date.now()\n        };\n    }\n    calculateHealthStatus(memory, loadTime, errors) {\n        if (memory > 100 || loadTime > 5000 || errors > 5) return \"critical\";\n        if (memory > 50 || loadTime > 3000 || errors > 2) return \"warning\";\n        return \"healthy\";\n    }\n    stopMonitoring() {\n        this.isMonitoring = false;\n    // Clean up any intervals or observers here\n    }\n    // Memory monitoring utility\n    monitorMemory() {\n        if (\"memory\" in performance) {\n            const memory = performance.memory;\n            return {\n                used: Math.round(memory.usedJSHeapSize / 1048576),\n                total: Math.round(memory.totalJSHeapSize / 1048576),\n                limit: Math.round(memory.jsHeapSizeLimit / 1048576)\n            };\n        }\n        return null;\n    }\n    constructor(){\n        this.metrics = new Map();\n        this.alerts = new Map();\n        this.isMonitoring = false;\n    }\n}\nconst monitoring = new MonitoringService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/monitoringService.ts\n"));

/***/ })

});